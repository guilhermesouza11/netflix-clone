[{"D:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\index.js":"1","D:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\App.js":"2","D:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\Tmdb.js":"3","D:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\components\\MovieRow.js":"4","D:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\components\\FeaturedMovie.js":"5","d:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\index.js":"6","d:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\App.js":"7","d:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\components\\FeaturedMovie.js":"8","d:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\Tmdb.js":"9","d:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\components\\MovieRow.js":"10","D:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\components\\Header.js":"11"},{"size":196,"mtime":1611895809957,"results":"12","hashOfConfig":"13"},{"size":2148,"mtime":1613242057119,"results":"14","hashOfConfig":"13"},{"size":2263,"mtime":1612705277704,"results":"15","hashOfConfig":"13"},{"size":1527,"mtime":1613240053349,"results":"16","hashOfConfig":"13"},{"size":1580,"mtime":1613257609127,"results":"17","hashOfConfig":"13"},{"size":196,"mtime":1611895809957,"results":"18","hashOfConfig":"19"},{"size":1405,"mtime":1612703172811,"results":"20","hashOfConfig":"19"},{"size":910,"mtime":1612710110603,"results":"21","hashOfConfig":"19"},{"size":2263,"mtime":1612705277704,"results":"22","hashOfConfig":"19"},{"size":543,"mtime":1612388880230,"results":"23","hashOfConfig":"19"},{"size":572,"mtime":1613125104100,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1p8h0xu",{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1an3ac4",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"27"},"D:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\index.js",[],["52","53"],"D:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\App.js",["54","55"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie.js';\nimport Header from './components/Header.js';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  // Essa função tem como objetivo executar o codigo dentro de seu escopo assim que a pagina é carregada.\n  useEffect(() => {\n    const loadAll = async () => {\n\n      // Pegando a lista com todos os filmes\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n      \n      //Pegando o Featured, filme/serie em destaquei\n      let originals = list.filter(i => i.slug == 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n\n      setFeaturedData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollListiner = () => {\n      if(window.scrollY > 10){\n        setBlackHeader(true);\n      }else{\n        setBlackHeader(false)\n      }\n    }\n\n    window.addEventListener('scroll', scrollListiner);\n\n    return () => {\n      window.removeEventListener('scroll', scrollListiner);\n    }\n  }, []);\n\n  return (\n    <div className=\"page\">\n\n      <Header black={blackHeader}/>\n\n      {featuredData && <FeaturedMovie item={featuredData} />}\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n      <footer>\n        Feito pelo estudante Guilherme Souza <br/>\n        Direitos de imagem para Netflix<br/>\n        Dados coletados do site Themoviedb.org\n      </footer>\n      {movieList <= 0 && \n        <div className=\"loading\">\n          <img src=\"https://media.filmelier.com/news/br/2020/03/netflix-loading.gif\" alt=\"Carregando\" />\n        </div>\n      }\n    </div>\n  );\n}","D:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\Tmdb.js",["56","57"],"const API_KEY = '2eb8ab7a31795a862f8805e2bdd8b61e';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n// originais neflix\r\n// recomendados\r\n// mais votados\r\n// ação\r\n// comédia\r\n// terror\r\n// romance\r\n// documentários\r\n\r\nconst basicFetch = async (endpoint) => {\r\n  const req = await fetch(`${API_BASE}${endpoint}`);\r\n  const json = await req.json(); \r\n  return json;\r\n}\r\n\r\nexport default { \r\n  \r\n  getHomeList: async () => {\r\n    return [\r\n      {\r\n        slug: 'originals',\r\n        title: 'Originais da Netflix',\r\n        items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slug: 'treding',\r\n        title: 'Recomendados para Você',\r\n        items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slub: 'toprated',\r\n        title: 'Em Alta',\r\n        items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slub: 'action',\r\n        title: 'Ação',\r\n        items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slub: 'comedy',\r\n        title: 'Comédia',\r\n        items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slub: 'horro',\r\n        title: 'Terror',\r\n        items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slub: 'romance',\r\n        title: 'Romance',\r\n        items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n      {\r\n        slub: 'documentary',\r\n        title: 'Documentários',\r\n        items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n      },\r\n    ]; \r\n  },\r\n  getMovieInfo: async (movieId, type) => {\r\n    let info = {};\r\n\r\n    if(movieId){\r\n      switch(type){\r\n        case 'movie':\r\n          info = await basicFetch (`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n        break;\r\n        case 'tv':\r\n          info = await basicFetch (`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n        break;\r\n      }\r\n    }\r\n\r\n    return info;\r\n  }\r\n}","D:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\components\\MovieRow.js",["58","59"],"import React, { useState } from 'react';\r\nimport './MovieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default ({title, items}) => {\r\n  const [scrollX, setScrollX] = useState(-400);\r\n\r\n  const handleLeftArrow = () => {\r\n    let x = scrollX + Math.round(window.innerWidth / 2);\r\n    if(x > 0){\r\n      x = 0;\r\n    }\r\n    setScrollX(x);\r\n  }\r\n\r\n  const handleRightArrow = () => {\r\n    let x = scrollX - Math.round(window.innerWidth / 2);\r\n    let listW = items.results.length * 150;\r\n    if((window.innerWidth - listW) > x){\r\n      x = (window.innerWidth - listW) - 60;\r\n    }\r\n    setScrollX(x);\r\n  }\r\n\r\n  return(\r\n    <div className=\"movieRow\">\r\n      <h2>{title}</h2>\r\n      <div className=\"movieRowLeft\" onClick={handleLeftArrow}>\r\n        <NavigateBeforeIcon style={{fontSize: 50}}/>\r\n      </div>\r\n      <div className=\"movieRowRight\" onClick={handleRightArrow}>\r\n        <NavigateNextIcon style={{fontSize: 50}}/>\r\n      </div>\r\n      <div className=\"movieRow--listarea\">\r\n        <div className=\"movieRow--list\" style={{\r\n            marginLeft: scrollX,\r\n            width: items.results.length * 150\r\n          }}>\r\n          {items.results.length > 0 && items.results.map((item, key) => (\r\n            <div key={key} className=\"movieRow--item\">\r\n              <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","D:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\components\\FeaturedMovie.js",["60"],"d:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\index.js",[],"d:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\App.js",["61","62"],"d:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\components\\FeaturedMovie.js",["63"],"d:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\Tmdb.js",["64","65"],"d:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\components\\MovieRow.js",["66","67"],"D:\\nasty\\Cursos\\netflix-clone\\netflixclone\\src\\components\\Header.js",["68"],"import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n  return(\r\n    <header className={black ? 'black' : ''}>\r\n      <div className=\"headerLogo\">\r\n        <a href=\"/\">\r\n          <img src=\"https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-5.png\" alt=\"Netflix Logo\"/>\r\n        </a>\r\n      </div>\r\n      <div className=\"headerUser\">\r\n        <a href=\"/\">\r\n          <img src=\"http://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Usuário Logo\"/>\r\n        </a>\r\n      </div>\r\n    </header>\r\n  );\r\n}",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":8,"column":1,"nodeType":"75","endLine":74,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":23,"column":47,"nodeType":"78","messageId":"79","endLine":23,"endColumn":49},{"ruleId":"73","severity":1,"message":"80","line":19,"column":1,"nodeType":"75","endLine":81,"endColumn":2},{"ruleId":"81","severity":1,"message":"82","line":69,"column":7,"nodeType":"83","messageId":"84","endLine":76,"endColumn":8},{"ruleId":"73","severity":1,"message":"74","line":6,"column":1,"nodeType":"75","endLine":49,"endColumn":2},{"ruleId":"85","severity":1,"message":"86","line":42,"column":15,"nodeType":"87","endLine":42,"endColumn":81},{"ruleId":"73","severity":1,"message":"74","line":4,"column":2,"nodeType":"75","endLine":43,"endColumn":3},{"ruleId":"73","severity":1,"message":"74","line":7,"column":1,"nodeType":"75","endLine":50,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":21,"column":47,"nodeType":"78","messageId":"79","endLine":21,"endColumn":49},{"ruleId":"73","severity":1,"message":"74","line":4,"column":2,"nodeType":"75","endLine":26,"endColumn":3},{"ruleId":"73","severity":1,"message":"80","line":19,"column":1,"nodeType":"75","endLine":81,"endColumn":2},{"ruleId":"81","severity":1,"message":"82","line":69,"column":7,"nodeType":"83","messageId":"84","endLine":76,"endColumn":8},{"ruleId":"73","severity":1,"message":"74","line":4,"column":1,"nodeType":"75","endLine":19,"endColumn":2},{"ruleId":"85","severity":1,"message":"86","line":12,"column":15,"nodeType":"87","endLine":12,"endColumn":81},{"ruleId":"73","severity":1,"message":"74","line":4,"column":1,"nodeType":"75","endLine":19,"endColumn":2},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Assign object to a variable before exporting as module default","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]